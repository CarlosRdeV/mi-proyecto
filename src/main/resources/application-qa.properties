# Configuración para ambiente de QA (Quality Assurance)
spring.application.name=gamified-taskmanager-qa
server.port=8081

# Base de datos H2 en archivo para QA (persistente entre reinicios)
spring.datasource.url=jdbc:h2:file:./data/taskmanager_qa;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=qa_password

# JPA/Hibernate para QA
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=true

# Consola H2 habilitada pero con autenticación en QA
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# Logging moderado para QA
logging.level.com.taskmanager.gamified=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.root=INFO

# CORS específico para QA
cors.allowed-origins=http://qa-frontend.taskmanager.com,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Content-Type,Authorization,X-Requested-With

# Configuración de datos iniciales solo si la BD está vacía
spring.sql.init.mode=embedded
spring.sql.init.data-locations=classpath:data.sql

# Cache habilitado para QA
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true

# Actuator endpoints limitados en QA
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.security.enabled=true

# Configuración de perfiles de prueba
spring.profiles.include=qa-data

# Configuración de validación estricta
server.error.include-stacktrace=on-param
server.error.include-message=always